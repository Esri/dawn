#include <metal_stdlib>
using namespace metal;

template<typename T, size_t N>
struct tint_array {
  const constant T& operator[](size_t i) const constant { return elements[i]; }
  device T& operator[](size_t i) device { return elements[i]; }
  const device T& operator[](size_t i) const device { return elements[i]; }
  thread T& operator[](size_t i) thread { return elements[i]; }
  const thread T& operator[](size_t i) const thread { return elements[i]; }
  threadgroup T& operator[](size_t i) threadgroup { return elements[i]; }
  const threadgroup T& operator[](size_t i) const threadgroup { return elements[i]; }
  T elements[N];
};

struct tint_module_vars_struct {
  device tint_array<float, 1>* tint_member;
};

struct S {
  simdgroup_float8x8 l;
  simdgroup_float8x8 r;
};

struct S_Nested {
  S s;
};

kernel void v(device tint_array<float, 1>* v_1 [[buffer(0)]]) {
  tint_module_vars_struct const tint_module_vars = tint_module_vars_struct{.tint_member=v_1};
  simdgroup_store(simdgroup_float8x8(), (&(*tint_module_vars.tint_member)[0u]), ulong(64u), ulong2(0ul), false);
  simdgroup_store(tint_array<simdgroup_float8x8, 4>{}[1u], (&(*tint_module_vars.tint_member)[0u]), ulong(64u), ulong2(0ul), false);
  simdgroup_store(tint_array<tint_array<simdgroup_float8x8, 4>, 4>{}[2u][3u], (&(*tint_module_vars.tint_member)[0u]), ulong(64u), ulong2(0ul), false);
  simdgroup_store(S{}.l, (&(*tint_module_vars.tint_member)[0u]), ulong(64u), ulong2(0ul), false);
  simdgroup_store(S_Nested{}.s.r, (&(*tint_module_vars.tint_member)[0u]), ulong(64u), ulong2(0ul), false);
  simdgroup_store(simdgroup_float8x8(42.0f), (&(*tint_module_vars.tint_member)[0u]), ulong(64u), ulong2(0ul), false);
  simdgroup_float8x8 const v_2 = simdgroup_float8x8(42.0f);
  simdgroup_store(tint_array<simdgroup_float8x8, 2>{v_2, simdgroup_float8x8(100.0f)}[1u], (&(*tint_module_vars.tint_member)[0u]), ulong(64u), ulong2(0ul), false);
  simdgroup_float8x8 const v_3 = simdgroup_float8x8(42.0f);
  tint_array<simdgroup_float8x8, 2> const v_4 = tint_array<simdgroup_float8x8, 2>{v_3, simdgroup_float8x8(100.0f)};
  simdgroup_float8x8 const v_5 = simdgroup_float8x8(-7.0f);
  simdgroup_store(tint_array<tint_array<simdgroup_float8x8, 2>, 2>{v_4, tint_array<simdgroup_float8x8, 2>{v_5, simdgroup_float8x8(-42.0f)}}[1u][0u], (&(*tint_module_vars.tint_member)[0u]), ulong(64u), ulong2(0ul), false);
  simdgroup_float8x8 const v_6 = simdgroup_float8x8(42.0f);
  simdgroup_store(S{.l=v_6, .r=simdgroup_float8x8(100.0f)}.l, (&(*tint_module_vars.tint_member)[0u]), ulong(64u), ulong2(0ul), false);
  simdgroup_float8x8 const v_7 = simdgroup_float8x8(42.0f);
  simdgroup_store(S_Nested{.s=S{.l=v_7, .r=simdgroup_float8x8(100.0f)}}.s.r, (&(*tint_module_vars.tint_member)[0u]), ulong(64u), ulong2(0ul), false);
}
